#ifndef WOLF_H
#define WOLF_H

#include "Drawer.h"

class Wolf {
    public:
        Wolf();
        void wolfRightAppear();
        void wolfRightDisappear();
        void wolfLeftAppear();
        void wolfLeftDisappear();
        void basketUpRightAppear();
        void basketUpRightDisappear();
        void basketUpLeftAppear();
        void basketUpLeftDisappear();
        void basketDownRightAppear();
        void basketDownRightDisappear();
        void basketDownLeftAppear();
        void basketDownLeftDisappear();

        volatile static uint8_t wolf_position;
        volatile static uint8_t basket_position;

    private:

        const int16_t wolfRight_x0 = 130;
        const int16_t wolfRight_y0 = 100;
        const int16_t wolfLeft_x0 = 125;
        const int16_t wolfLeft_y0 = 100;
        const uint8_t wolf_raws = 96;
        const uint8_t wolf_columns = 64;

        int16_t basketUpRight_x0 = 0;
        int16_t basketUpRight_y0 = 0;
        int16_t basketUpLeft_x0 = 0;
        int16_t basketUpLeft_y0 = 0;
        const uint8_t basketUp_raws = 48;
        const uint8_t basketUp_columns = 48;
        const uint8_t basketUpPart1_raws = 16;
        const uint8_t basketUpPart1_columns = 9;
        const uint8_t basketUpPart2_raws = 48;
        const uint8_t basketUpPart2_columns = 39;

        int16_t basketDownRight_x0 = 0;
        int16_t basketDownRight_y0 = 0;
        int16_t basketDownLeft_x0 = 0;
        int16_t basketDownLeft_y0 = 0;
        const uint8_t basketDown_raws = 48;
        const uint8_t basketDown_columns = 48;
        const uint8_t basketDownPart1_raws = 16;
        const uint8_t basketDownPart1_columns = 7;
        const uint8_t basketDownPart2_raws = 48;
        const uint8_t basketDownPart2_columns = 41;
};

const uint8_t wolf_right_map[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x01, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x01, 0x9C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xCE, 0x01, 0x9C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC7, 0x01, 0x8C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC7, 0x01, 0x8E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC3, 0x81, 0xCE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xF3, 0x81, 0xFE,
    0x00, 0x00, 0x7F, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF9, 0xC1, 0xFE,
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x3C, 0xF9, 0xC1, 0xFE,
    0x00, 0x01, 0xFF, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x78, 0x7C, 0xE1, 0x9E,
    0x00, 0x01, 0xFF, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x70, 0x7C, 0x71, 0x9E,
    0x00, 0x01, 0xFF, 0x9F, 0xF8, 0x00, 0x00, 0x00, 0xF0, 0x3C, 0x71, 0x9F,
    0x00, 0x00, 0xFF, 0x1F, 0xFC, 0x00, 0x00, 0x03, 0xE7, 0x3E, 0x39, 0xDF,
    0x00, 0x00, 0x7C, 0x1F, 0xFC, 0x00, 0x00, 0x0F, 0xCF, 0xFE, 0x39, 0xDF,
    0x00, 0x00, 0x1C, 0x0F, 0xFE, 0x00, 0x00, 0x3F, 0xCF, 0xFF, 0x1D, 0xDF,
    0x01, 0xC0, 0x1C, 0x0F, 0xFF, 0x00, 0x00, 0xFF, 0xCF, 0xEF, 0x9C, 0xDF,
    0x07, 0xC0, 0x0E, 0x0F, 0xFF, 0x00, 0x03, 0xFF, 0xC7, 0xE7, 0x8E, 0xDF,
    0x3F, 0x8F, 0x87, 0x0F, 0xF7, 0x00, 0x07, 0xFF, 0xC1, 0xE3, 0xCF, 0xDF,
    0x7F, 0xBF, 0x03, 0x8F, 0xE7, 0x00, 0x1F, 0xFF, 0xE0, 0xE1, 0xE7, 0xDF,
    0x7F, 0x3C, 0x01, 0xCF, 0xE7, 0x00, 0x3F, 0xFF, 0xE0, 0xE0, 0xF3, 0x9F,
    0x3F, 0x78, 0x3D, 0xEF, 0xEE, 0x00, 0xFF, 0xFF, 0xE0, 0xC0, 0x78, 0x3F,
    0x3E, 0xFB, 0xFD, 0xFF, 0xCE, 0x03, 0xFF, 0xFF, 0xE0, 0xE0, 0x38, 0x3E,
    0x1F, 0xFF, 0xFF, 0xFF, 0xCC, 0x07, 0xFF, 0xFF, 0xE0, 0xE0, 0x1C, 0x3E,
    0x1F, 0xFF, 0xFF, 0xEF, 0x9C, 0x1F, 0xFF, 0xFF, 0xE0, 0xC0, 0x0E, 0x3E,
    0x1F, 0xFF, 0xF7, 0xEF, 0xB8, 0x7F, 0xFF, 0xFF, 0xE0, 0xC0, 0x07, 0xBC,
    0x1F, 0xFF, 0x71, 0xEF, 0xB8, 0xFF, 0xFF, 0xFF, 0xE1, 0xC0, 0x03, 0xFC,
    0x3F, 0xFF, 0x79, 0xEF, 0xBB, 0xFF, 0x1F, 0xFF, 0xE1, 0xC0, 0x00, 0xF8,
    0x3F, 0xFF, 0x7F, 0xEF, 0x3B, 0xFC, 0x1F, 0xFF, 0xC1, 0xC0, 0x00, 0x00,
    0x3F, 0xFE, 0xFF, 0xFF, 0x3B, 0xF8, 0x3F, 0xFF, 0xC1, 0xC0, 0x00, 0x00,
    0x3F, 0xFE, 0xFF, 0xDF, 0x3F, 0xE0, 0x3F, 0xFF, 0x81, 0xC0, 0x00, 0x00,
    0x73, 0xFE, 0xFF, 0xDF, 0x3F, 0xC0, 0x7F, 0xFF, 0x9F, 0xC0, 0x00, 0x00,
    0x7F, 0xFF, 0xE1, 0xCE, 0x3E, 0x00, 0xFF, 0xFF, 0x1F, 0xC0, 0x00, 0x00,
    0x7F, 0xFF, 0xF1, 0xC0, 0x78, 0x01, 0xFF, 0xFF, 0x0F, 0xE0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xE0, 0xF0, 0x07, 0xFF, 0xFF, 0x0F, 0xE0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xC0, 0xC0, 0x0F, 0xFF, 0xC3, 0x0F, 0x60, 0x00, 0x00,
    0x0F, 0xFF, 0xC0, 0x02, 0x00, 0x1F, 0xFF, 0x03, 0x82, 0x60, 0x00, 0x00,
    0x1D, 0xFF, 0xC0, 0xC6, 0x30, 0x3F, 0xFC, 0x07, 0x81, 0xE0, 0x00, 0x7C,
    0xFD, 0xFF, 0xE0, 0xFE, 0x70, 0x7F, 0xF8, 0x0F, 0xC7, 0xE0, 0x01, 0xFE,
    0xFD, 0xFF, 0xF9, 0xFF, 0xF7, 0xFF, 0xE0, 0x1C, 0xEF, 0x60, 0x07, 0xEE,
    0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x38, 0xFC, 0x60, 0x1F, 0xFE,
    0xFF, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x71, 0xFC, 0x60, 0x7D, 0xFE,
    0x7F, 0xBF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0xE3, 0xBC, 0x63, 0xF3, 0xFE,
    0x0E, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0x01, 0xE7, 0x3C, 0x7F, 0xC3, 0xFE,
    0x1C, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x03, 0xCE, 0x1C, 0x7F, 0x03, 0x7E,
    0x1D, 0xFC, 0xFF, 0xFF, 0xFB, 0x80, 0x07, 0xDC, 0x0E, 0x38, 0x0F, 0x7E,
    0x1B, 0xF1, 0xFF, 0xFF, 0xF8, 0x00, 0x03, 0xBC, 0x06, 0x00, 0x3F, 0x7E,
    0x3B, 0xC3, 0xFF, 0xFF, 0xF8, 0x00, 0x07, 0xF8, 0x07, 0x00, 0xFE, 0xEC,
    0x38, 0x0F, 0xFF, 0xF1, 0x80, 0x00, 0x0F, 0xF0, 0x03, 0x03, 0xEE, 0xDC,
    0x78, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0xCD, 0xD8,
    0xFF, 0xFF, 0xFD, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x1D, 0xB8,
    0x7F, 0xE3, 0xFE, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x1F, 0xB8,
    0x00, 0x03, 0xFF, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x70,
    0x00, 0x01, 0xFF, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x70,
    0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0,
    0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00
};

const uint8_t basket_down_right_map_part1[] PROGMEM = {
    0xEC, 0x77,
    0xFC, 0xF7,
    0xFD, 0xEE,
    0xFD, 0xDC,
    0xFB, 0xF8,
    0x73, 0xF0,
    0x03, 0xE0
};

const uint8_t basket_down_right_map_part2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xC0,
    0x00, 0x00, 0x03, 0xFF, 0xFF, 0xE0,
    0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0,
    0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF8,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFC,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x1F, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF,
    0x1C, 0x07, 0xF0, 0xFF, 0xFF, 0xFF,
    0x39, 0xC7, 0xC0, 0xFF, 0xFF, 0xFF,
    0x78, 0xFF, 0x00, 0x7F, 0xFF, 0xFF,
    0x70, 0x3F, 0xBC, 0x7F, 0xFF, 0xFF,
    0x71, 0xDF, 0xFF, 0xFF, 0xFF, 0xFE,
    0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC,
    0xF0, 0x7F, 0xF7, 0xDF, 0xFF, 0xF8,
    0xE0, 0x1F, 0xF3, 0xCF, 0xFF, 0xF8,
    0xE0, 0x7E, 0x79, 0xDF, 0xFF, 0xF0,
    0xE0, 0xFE, 0x38, 0x1F, 0xFF, 0xC0,
    0xE3, 0xFE, 0x00, 0x1F, 0xFF, 0x80,
    0xE3, 0xFE, 0x00, 0x1E, 0xFF, 0x00,
    0xE0, 0x7C, 0x00, 0x1E, 0x7C, 0x00,
    0xE0, 0xF8, 0x00, 0x3C, 0x00, 0x00,
    0xE1, 0xF8, 0x00, 0x3C, 0x00, 0x00,
    0xE3, 0xF8, 0x00, 0x78, 0x00, 0x00,
    0xE7, 0x9C, 0x01, 0xF0, 0x00, 0x00,
    0xE7, 0x1C, 0x07, 0xE0, 0x00, 0x00,
    0xE7, 0x1C, 0x1F, 0x00, 0x00, 0x00,
    0xE7, 0x1C, 0x3C, 0x00, 0x00, 0x00,
    0xEF, 0x1C, 0x78, 0x00, 0x00, 0x00,
    0xEE, 0x1C, 0xF0, 0x00, 0x00, 0x00,
    0xEE, 0x3D, 0xE0, 0x00, 0x00, 0x00,
    0xEE, 0x39, 0xC0, 0x00, 0x00, 0x00,
    0xEC, 0x7B, 0x80, 0x00, 0x00, 0x00
};

const uint8_t basket_up_right_map_part1[] PROGMEM = {
    0x03, 0xCE,
    0x01, 0xCE,
    0x01, 0xE7,
    0x00, 0xF7,
    0x00, 0x7F,
    0x00, 0x3F,
    0x00, 0x3F,
    0x00, 0x1F,
    0x00, 0x0F
};

const uint8_t basket_up_right_map_part2[] PROGMEM = {
    0x00, 0x00, 0x00, 0x3F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xF8, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFC, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00,
    0x3F, 0xFC, 0x03, 0xFF, 0xFF, 0x00,
    0x7F, 0xFF, 0xEF, 0xFF, 0xFF, 0x80,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0,
    0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xE0,
    0xF8, 0x00, 0x7F, 0xFF, 0xCF, 0xE0,
    0xF8, 0x00, 0x0F, 0xF3, 0xC7, 0xE0,
    0xF9, 0x80, 0x1F, 0xF1, 0xE7, 0x70,
    0xFB, 0xE0, 0x1F, 0xF8, 0xF0, 0x70,
    0xFF, 0xFC, 0x1F, 0xF8, 0xF0, 0x70,
    0xFF, 0x7F, 0x1F, 0xFC, 0x78, 0x70,
    0x7E, 0x7F, 0xFF, 0xFE, 0x38, 0xE0,
    0x3E, 0x7F, 0xFF, 0xFF, 0x00, 0xE0,
    0x3F, 0xFB, 0xFF, 0xFF, 0x00, 0xC0,
    0x1F, 0xF3, 0xFF, 0xFF, 0x80, 0xC0,
    0x0F, 0xFB, 0xDF, 0xFF, 0x80, 0xC0,
    0x0F, 0x7B, 0xDF, 0xFF, 0x80, 0xC0,
    0x0F, 0x7F, 0x9F, 0xFF, 0x00, 0xC0,
    0x0F, 0x3F, 0xBE, 0x00, 0x00, 0xC0,
    0x0F, 0x3F, 0x7F, 0xC0, 0x01, 0xC0,
    0x0F, 0x3F, 0xFF, 0xF0, 0x01, 0xC0,
    0x1F, 0x0F, 0xFF, 0xFC, 0x01, 0xE0,
    0x0F, 0x80, 0x7F, 0xFF, 0x00, 0xE0,
    0x0F, 0xC0, 0x3F, 0xFF, 0x80, 0xE0,
    0x07, 0xF0, 0x0F, 0xFF, 0xC0, 0xE0,
    0x03, 0xFC, 0x07, 0xFF, 0xF0, 0xE0,
    0x01, 0xFF, 0x03, 0xFF, 0xF0, 0xF0,
    0x00, 0x3F, 0xC0, 0xFF, 0xF8, 0x70,
    0x00, 0x07, 0xF0, 0x3F, 0x7C, 0x70,
    0x00, 0x00, 0xFE, 0x0F, 0xBE, 0x78,
    0x00, 0x00, 0x3F, 0xC3, 0x9E, 0x38,
    0x00, 0x00, 0x07, 0xFF, 0xCF, 0x3C,
    0x00, 0x00, 0x00, 0xFF, 0xCF, 0x9C,
    0x00, 0x00, 0x00, 0x0F, 0x87, 0x9E
};

#endif /* WOLF_H */
