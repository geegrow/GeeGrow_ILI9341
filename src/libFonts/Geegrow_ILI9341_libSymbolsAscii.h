/*!
 * @file Geegrow_ILI9341_libSymbolsAscii.h
 *
 * This is an addon library for the Geegrow ILI9341 TFT 240x320 display,
 * which implements bitmaps of ASCII special symbols
 * https://www.geegrow.ru
 *
 * @section author Author
 * Written by Anton Pomazanov
 *
 * @section license License
 * BSD license, all text here must be included in any redistribution.
 *
 */

#ifndef GEEGROW_ILI9341_LIBSYMBOLS_ASCII_H
#define GEEGROW_ILI9341_LIBSYMBOLS_ASCII_H

#include <Arduino.h>
#include <avr/pgmspace.h>
#include <Geegrow_ILI9341_defines.h>

/**************************************************************************/
/*!
    @brief    Class that stores state and functions for implementing bitmaps
              of ASCII special symbols
*/
/**************************************************************************/
class Geegrow_ILI9341_libSymbolsAscii {
    public:
        Geegrow_ILI9341_libSymbolsAscii(){}
        ~Geegrow_ILI9341_libSymbolsAscii(){}
        uint16_t* getBitMap(char _char);
};

/**************************************************************************/
/*!
    @brief    Bitmaps of ASCII special symbols
*/
/**************************************************************************/
const uint16_t fontLibSymbolsAscii[] PROGMEM = {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,     // ' '
    0x0000, 0x0000, 0x0038, 0x0DFC, 0x0DFC, 0x0038, 0x0000, 0x0000,     // !
    0x0000, 0x000C, 0x003C, 0x0000, 0x0000, 0x000C, 0x003C, 0x0000,     // "
    0x0280, 0x0FE0, 0x0FE0, 0x0280, 0x0FE0, 0x0FE0, 0x0280, 0x0000,     // #
    0x0440, 0x0CE0, 0x09A0, 0x3FF8, 0x0B20, 0x0E60, 0x0440, 0x0000,     // $
    0x0618, 0x0324, 0x01A4, 0x06D8, 0x0960, 0x0930, 0x0618, 0x0000,     // %
    0x0700, 0x0F98, 0x08FC, 0x09E4, 0x073C, 0x0F98, 0x0880, 0x0000,     // &
    0x0000, 0x0000, 0x0000, 0x002C, 0x001C, 0x0000, 0x0000, 0x0000,     // '
    0x0000, 0x0000, 0x03F0, 0x07F8, 0x0C0C, 0x0804, 0x0000, 0x0000,     // (
    0x0000, 0x0000, 0x0804, 0x0C0C, 0x07F8, 0x03F0, 0x0000, 0x0000,     // )
    0x0080, 0x02A0, 0x03E0, 0x01C0, 0x01C0, 0x03E0, 0x02A0, 0x0080,     // *
    0x0000, 0x0080, 0x0080, 0x03E0, 0x03E0, 0x0080, 0x0080, 0x0000,     // +
    0x0000, 0x0000, 0x0000, 0x2C00, 0x1C00, 0x0000, 0x0000, 0x0000,     // ,
    0x0000, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x0080, 0x0000,     // -
    0x0000, 0x0000, 0x0000, 0x0C00, 0x0C00, 0x0000, 0x0000, 0x0000,     // .
    0x0C00, 0x0600, 0x0300, 0x0180, 0x00C0, 0x0060, 0x0030, 0x0000,     // /
    0x0000, 0x0000, 0x0000, 0x0C60, 0x0C60, 0x0000, 0x0000, 0x0000,     // :
    0x0000, 0x0000, 0x0000, 0x2C60, 0x1C60, 0x0000, 0x0000, 0x0000,     // ;
    0x0000, 0x0080, 0x01C0, 0x0360, 0x0630, 0x0C18, 0x0808, 0x0000,     // <
    0x0000, 0x0000, 0x0140, 0x0140, 0x0140, 0x0140, 0x0000, 0x0000,     // =
    0x0000, 0x0808, 0x0C18, 0x0630, 0x0360, 0x01C0, 0x0080, 0x0000,     // >
    0x0018, 0x001C, 0x0004, 0x0D84, 0x0DC4, 0x007C, 0x0038, 0x0000,     // ?
    0x03E0, 0x0410, 0x0BC8, 0x0A28, 0x0928, 0x0BE8, 0x0210, 0x01E0,     // @
    0x0000, 0x0000, 0x0FFC, 0x0FFC, 0x0804, 0x0804, 0x0000, 0x0000,     // [
    0x0030, 0x0060, 0x00C0, 0x0180, 0x0300, 0x0600, 0x0C00, 0x0000,     // '\'
    0x0000, 0x0000, 0x0804, 0x0804, 0x0FFC, 0x0FFC, 0x0000, 0x0000,     // ]
    0x0040, 0x0060, 0x0030, 0x0018, 0x0030, 0x0060, 0x0040, 0x0000,     // ^
    0x0000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x0000,     // _
    0x0000, 0x0000, 0x0000, 0x001C, 0x002C, 0x0000, 0x0000, 0x0000,     // `
    0x0000, 0x0080, 0x0080, 0x0FF8, 0x1F7C, 0x1004, 0x1004, 0x0000,     // {
    0x0000, 0x0000, 0x0000, 0x0F78, 0x0F78, 0x0000, 0x0000, 0x0000,     // |
    0x0000, 0x1004, 0x1004, 0x1F7C, 0x0FF8, 0x0080, 0x0080, 0x0000,     // }
    0x0100, 0x0180, 0x0080, 0x0180, 0x0100, 0x0180, 0x0080, 0x0000      // ~
};

#endif /* GEEGROW_ILI9341_LIBSYMBOLS_ASCII_H */
